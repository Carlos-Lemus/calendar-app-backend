{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/prepareEvents.js","actions/events.js","components/ui/NavBar.js","helpers/messages.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","components/ui/Spinner.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/eventReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchWithoutToken","endPoint","method","data","fetch","options","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","logout","type","login","user","payload","finishChecking","useForm","initialState","useState","value","setValue","reset","newFormState","handleInputChange","target","name","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","changeInputFormLoginValues","rName","rEmail","rPassword1","rPassword2","formRegisterValues","changeInputFormRegisterValues","style","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","className","onSubmit","event","email","password","preventDefault","a","req","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","onChange","placeholder","resp","prepareEvents","events","map","start","moment","toDate","end","loadedEvents","newAddEvent","startClearActiveEvent","updateEvent","deleteEvent","NavBar","useSelector","state","auth","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","startOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","openModal","ui","calendar","activeEvent","daySlotCalendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","closeTimeoutMS","overlayClassName","ariaHideApp","e","momentStart","momentEnd","isSameOrAfter","trim","length","id","res","console","log","getState","_id","startNewAddEvent","data-enable-time","handleStartDateChange","minDate","handleEndDateChange","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onView","onSelectEvent","startSetActiveEvent","view","components","selectable","onSelectSlot","slotInfo","Spinner","PrivateRoute","isAuthentication","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","initState","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92a43f61.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchWithoutToken = (endPoint, method = \"GET\", data = {}) => {\r\n\r\n    if (method === \"GET\") {\r\n        return fetch(`${baseUrl}/${endPoint}`);\r\n    } else {\r\n\r\n        const options = {\r\n            method,\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        };\r\n\r\n        return fetch(`${baseUrl}/${endPoint}`, options);\r\n    }\r\n\r\n};\r\n\r\nconst fetchWithToken = (endPoint, method = \"GET\", data = {}) => {\r\n\r\n    const token = localStorage.getItem(\"token\") || \"\";\r\n\r\n    if (method === \"GET\") {\r\n        return fetch(`${baseUrl}/${endPoint}`, {\r\n            method,\r\n            headers: {\r\n                \"x-token\": token\r\n            }\r\n        });\r\n    } else {\r\n\r\n        return fetch(`${baseUrl}/${endPoint}`, {\r\n            method,\r\n            headers: {\r\n                \"x-token\": token,\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n\r\n};\r\n\r\nexport {\r\n    fetchWithoutToken,\r\n    fetchWithToken\r\n};","export const types = {\r\n    uiOpenModal: \"[Ui] Open Modal\",\r\n    uiCloseModal: \"[Ui] Close Modal\",\r\n\r\n    eventAddNew: \"[Event] Add New Event\",\r\n    eventSetActive: \"[Event] Set Active Event\",\r\n    eventClearActiveEvent: \"[Event] Clear Active Event\",\r\n    eventUpdate: \"[Event] Update Event\",\r\n    eventDeleted: \"[Event] Deleted Event\",\r\n    eventLoaded: \"[Event] Loaded Events\",\r\n    eventSelectSlot: \"[Event] Select Slot Day\",\r\n    eventClearSelectSlot: \"[Event] Clrear Select Slot Day\",\r\n\r\n    authCheckingFinish: \"[Auth] Checking Login State Finish\",\r\n    authStartLogin: \"[Auth] Start Login\",\r\n    authLogin: \"[Auth] Login\",\r\n    authStartRegister: \"[Auth] Start Register\",\r\n    authStartTokenRenew: \"[Auth] Start Token Renew\",\r\n    authLogout: \"[Auth] Logout\"\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async(dispatch) => {\r\n        \r\n        const req = await fetchWithoutToken(\"auth\", \"POST\", {email, password});\r\n        const body = await req.json();\r\n\r\n        if(body.ok) {\r\n\r\n            localStorage.setItem(\"token\", body.token);\r\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire(\"Error\", body.msg, \"error\");\r\n        }\r\n\r\n    };\r\n};\r\n\r\nexport const startRegister = (name, email, password) => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchWithoutToken(\"auth/new\", \"POST\", {name, email, password});\r\n        const body = await resp.json();\r\n        \r\n        if(body.ok) {\r\n            localStorage.setItem(\"token\", body.token);\r\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n            \r\n            dispatch(login( { name: body.name, uid: body.uid } ) );\r\n            \r\n        } else {\r\n            Swal.fire(\"Error\", body.msg, \"error\");\r\n        }\r\n    };\r\n};\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchWithToken(\"auth/renew\");\r\n        const body = await resp.json();\r\n        \r\n        if(body.ok) {\r\n            localStorage.setItem(\"token\", body.token);\r\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n            \r\n            dispatch(login( { name: body.name, uid: body.uid } ) );\r\n            \r\n        } else {\r\n            dispatch(finishChecking());\r\n        }\r\n    };\r\n};\r\n\r\nexport const startLogout = () => {\r\n    return async(dispatch) => {\r\n\r\n        localStorage.clear();\r\n\r\n        dispatch(logout());\r\n    }\r\n};\r\n\r\nconst logout = () => ({ type: types.authLogout });\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const finishChecking = () => ({\r\n    type: types.authCheckingFinish\r\n});\r\n\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState = {  }) => {\r\n    \r\n    const [value, setValue] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValue(newFormState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        \r\n        setValue({\r\n            ...value,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [\r\n        value, \r\n        handleInputChange,\r\n        reset\r\n    ];\r\n\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, changeInputFormLoginValues] = useForm({\r\n        lEmail: \"pedro@gmail.com\",\r\n        lPassword: \"123456\"\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    \r\n\r\n    const handleLogin = (event) => {\r\n        event.preventDefault();\r\n        \r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n\r\n    const [formRegisterValues, changeInputFormRegisterValues] = useForm({\r\n        rName: \"Pedro\",\r\n        rEmail: \"pedro2@gmail.com\",\r\n        rPassword1: \"123456\",\r\n        rPassword2: \"123456\"\r\n    });\r\n\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n    \r\n    const handleRegister = (event) => {\r\n        event.preventDefault();\r\n\r\n        if(rPassword1 === rPassword2 ){\r\n            dispatch(startRegister(rName, rEmail, rPassword1));\r\n        } else {\r\n            Swal.fire(\"Error\", \"Los password no son iguales\", \"error\");\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div \r\n            style={ \r\n                { \r\n                    backgroundImage: \"url(/assets/img/background.jpg)\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundPosition: \"left bottom\"\r\n                } \r\n            }\r\n            className=\"container-fluid login-container\"\r\n        >\r\n            <div className=\"row animate__animated animate__fadeIn\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin } >\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                name=\"lEmail\"\r\n                                onChange={ changeInputFormLoginValues } \r\n                                value={ lEmail }\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                name=\"lPassword\"\r\n                                onChange={ changeInputFormLoginValues }\r\n                                value={ lPassword }\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister } >\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={ changeInputFormRegisterValues }\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={ changeInputFormRegisterValues }\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={ changeInputFormRegisterValues }\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={ changeInputFormRegisterValues }\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import moment from \"moment\";\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    return events.map(event => ({\r\n        ...event,\r\n        start: moment(event.start).toDate(),\r\n        end: moment(event.end).toDate()\r\n    }));\r\n};","import Swal from \"sweetalert2\";\r\nimport { fetchWithToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startLoadingEvents = () => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const res = await fetchWithToken(\"events/\");\r\n            const body = await res.json();\r\n            \r\n            const events = prepareEvents(body.events);\r\n\r\n            dispatch(loadedEvents(events));\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n};\r\n\r\nconst loadedEvents = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const startSetActiveEvent = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const startNewAddEvent = (event) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const res = await fetchWithToken(\"events\", \"POST\", event);\r\n            const body = await res.json();\r\n\r\n            if (body.ok) {\r\n\r\n                const { uid, name } = getState().auth;\r\n\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                };\r\n\r\n                dispatch(newAddEvent(event));\r\n            } else {\r\n                Swal.fire(\"Error\", body.msg, \"error\");\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n};\r\n\r\nconst newAddEvent = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const startClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const startUpdateEvent = (event) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const res = await fetchWithToken(`events/${ event.id }`, \"PUT\", event);\r\n            const body = await res.json();\r\n            \r\n            if(body.ok) {\r\n                dispatch(updateEvent(event));\r\n            } else {\r\n                Swal.fire(\"Error\", body.msg, \"error\");\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nconst updateEvent = (event) => ({\r\n    type: types.eventUpdate,\r\n    payload: event\r\n});\r\n\r\nexport const startDeleteEvent = () => {\r\n\r\n    return async(dispatch, getState) => {\r\n\r\n        try {\r\n            const {id} = getState().calendar.activeEvent;\r\n\r\n            const res = await fetchWithToken(`events/${id}`, \"DELETE\");\r\n            const body = await res.json();\r\n\r\n            if(body.ok) {\r\n\r\n                dispatch(deleteEvent());       \r\n                dispatch(startClearActiveEvent());\r\n\r\n            } else {\r\n                Swal.fire(\"Error\", body.msg, \"error\");\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n\r\n};\r\n\r\nconst deleteEvent = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\nexport const selectSlotDay = (day) => ({\r\n    type: types.eventSelectSlot,\r\n    payload: day\r\n});\r\n\r\nexport const clearSelectSlotDay = () => ({\r\n    type: types.eventClearSelectSlot\r\n});","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startClearActiveEvent } from '../../actions/events';\r\n\r\nexport const NavBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startClearActiveEvent());\r\n        dispatch(startLogout());\r\n    };\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand \">\r\n                {name}\r\n            </span>\r\n\r\n            <button\r\n                onClick={handleLogout}\r\n                className=\"btn btn-outline-danger\"\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span className=\"ml-2\">Salir</span>\r\n            </button>\r\n\r\n        </nav>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n\r\n    const {title, user} = event;\r\n    \r\n    return (\r\n        <div>\r\n            <strong> {title} </strong>\r\n            -\r\n            <strong> {user.name} </strong>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const startOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const startCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport Swal from 'sweetalert2';\r\nimport { startCloseModal } from '../../actions/ui';\r\nimport { clearSelectSlotDay, startClearActiveEvent, startNewAddEvent, startUpdateEvent } from '../../actions/events';\r\nimport \"flatpickr/dist/themes/airbnb.css\";\r\nimport Flatpickr from \"react-flatpickr\";\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours'); // 3:00:00\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { openModal } = useSelector(state => state.ui);\r\n    const { activeEvent, daySlotCalendar } = useSelector(state => state.calendar);\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n            setDateStart(activeEvent.start);\r\n            setDateEnd(activeEvent.end);\r\n        }\r\n        else if (daySlotCalendar) {\r\n            setFormValues(daySlotCalendar);\r\n            setDateStart(daySlotCalendar.start);\r\n            setDateEnd(daySlotCalendar.end);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, daySlotCalendar,setFormValues])\r\n\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n\r\n    const closeModal = () => {\r\n        // TODO: cerrar el modal\r\n        dispatch(startCloseModal());\r\n        dispatch(startClearActiveEvent());\r\n        dispatch(clearSelectSlotDay());\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    const handleStartDateChange = ([e]) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = ([e]) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire('Error', 'La fecha fin debe de ser mayor a la fecha de inicio', 'error');\r\n        }\r\n\r\n        if (title.trim().length < 2) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if (activeEvent) {\r\n            dispatch(startUpdateEvent(formValues))\r\n        } else {\r\n            dispatch(startNewAddEvent(formValues));\r\n        }\r\n\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={openModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n            ariaHideApp={!process.env.NODE_ENV === 'test'}\r\n        >\r\n            <h1> {(activeEvent) ? 'Editar evento' : 'Nuevo evento'} </h1>\r\n            <hr />\r\n            <form\r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <Flatpickr\r\n                        className=\"form-control\"\r\n                        data-enable-time\r\n                        value={dateStart}\r\n                        onChange={date => handleStartDateChange(date)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <Flatpickr\r\n                        className=\"form-control\"\r\n                        data-enable-time\r\n                        value={dateEnd}\r\n                        options={{ minDate: dateStart }}\r\n                        onChange={date => handleEndDateChange(date)}\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'} `}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { startClearActiveEvent } from '../../actions/events';\r\nimport { startOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClick = () => {\r\n        dispatch( startClearActiveEvent());\r\n        dispatch(startOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            type=\"button\"\r\n            onClick={ handleClick }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { startDeleteEvent } from '../../actions/events'\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClick = () => {\r\n        dispatch(startDeleteEvent());\r\n    }\r\n\r\n    return (\r\n        <button \r\n            onClick={ handleClick }\r\n            className=\"btn btn-danger fab-danger\"\r\n            type=\"button\"\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span>Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { NavBar } from '../ui/NavBar';\r\n\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport { messages } from '../../helpers/messages';\r\n\r\n// import \"moment/locale/es\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startOpenModal } from '../../actions/ui';\r\nimport { selectSlotDay, startLoadingEvents, startSetActiveEvent } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale(\"es\");\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const {events, activeEvent} = useSelector(state => state.calendar)\r\n    const {uid} = useSelector(state => state.auth)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem(\"lastView\") || \"month\");\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(startLoadingEvents());\r\n\r\n    }, [dispatch])\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n    \r\n        const style = {\r\n            backgroundColor: (event.user._id === uid)? \"#367CF7\" : \"#465660\",\r\n            borderRadius: \"0px\",\r\n            opacity: 0.8,\r\n            display: \"block\",\r\n            color: \"white\"\r\n        };\r\n\r\n        return {\r\n            style\r\n        }\r\n        \r\n    }\r\n\r\n    const onDoubleClickEvent = (event) => {\r\n        dispatch(startOpenModal());\r\n    };\r\n    \r\n    const onSelectEvent = (event) => {\r\n        dispatch(startSetActiveEvent(event));\r\n    };\r\n    \r\n    const onViewChange = (event) => {\r\n        setLastView(event);\r\n        localStorage.setItem(\"lastView\", event);\r\n    };\r\n    \r\n    const onSelectSlot = (slotInfo) => {\r\n        const {start, end} = slotInfo;\r\n        \r\n        dispatch(selectSlotDay({\r\n            title: \"\",\r\n            notes: \"\",\r\n            start, end\r\n        }));\r\n        \r\n        dispatch(startOpenModal());\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar />\r\n\r\n            <Calendar\r\n                className=\"animate__animated animate__zoomIn\"\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClickEvent }\r\n                onView={ onViewChange }\r\n                onSelectEvent={ onSelectEvent }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                selectable={ true }\r\n                onSelectSlot={ onSelectSlot }\r\n            />\r\n\r\n            <AddNewFab />\r\n\r\n            {\r\n                activeEvent && <DeleteEventFab />\r\n            }\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Spinner = () => {\r\n    return (\r\n        <div className=\"spinner-content\">\r\n            <div className=\"sk-chase\">\r\n                <div className=\"sk-chase-dot\"></div>\r\n                <div className=\"sk-chase-dot\"></div>\r\n                <div className=\"sk-chase-dot\"></div>\r\n                <div className=\"sk-chase-dot\"></div>\r\n                <div className=\"sk-chase-dot\"></div>\r\n                <div className=\"sk-chase-dot\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PrivateRoute = ({ isAuthentication, component:Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => (\r\n                (isAuthentication) ?\r\n                    <Component {...props} />\r\n                    :\r\n                    <Redirect to=\"/login\" />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthentication: PropTypes.bool.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PublicRoute = ({ isAuthentication, component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => (\r\n                (isAuthentication) ?\r\n                    <Redirect to=\"/\" />\r\n                    :\r\n                    <Component {...props} />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthentication: PropTypes.bool.isRequired\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { Spinner } from '../components/ui/Spinner';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n    \r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n\r\n    }, [dispatch]);\r\n    \r\n    if(checking) {\r\n        return <Spinner />\r\n    }\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        exact\r\n                        path=\"/login\"\r\n                        component={LoginScreen}\r\n                        isAuthentication={!!uid}\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={CalendarScreen}\r\n                        isAuthentication={!!uid}\r\n                    />\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initState = {\r\n    checking:  true,\r\n    // uid: null,\r\n    // name: null\r\n};\r\n\r\nexport const authReducer = (state = initState, action ) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            \r\n            return {\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null,\r\n    daySlotCalendar: null\r\n}\r\n\r\nexport const eventReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdate:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    event => (event.id === action.payload.id) ? action.payload : event\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    event => (event.id !== state.activeEvent.id)\r\n                )\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: action.payload\r\n            }\r\n\r\n        case types.eventSelectSlot:\r\n            return {\r\n                ...state,\r\n                daySlotCalendar: action.payload\r\n            }\r\n        case types.eventClearSelectSlot:\r\n            return {\r\n                ...state,\r\n                daySlotCalendar: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    openModal: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                openModal: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                openModal: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { eventReducer } from \"./eventReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: eventReducer,\r\n    auth: authReducer\r\n});","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CalendarApp } from './CalendarApp';\r\nimport \"./styles.css\";\r\n\r\nReactDOM.render(\r\n  <CalendarApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}